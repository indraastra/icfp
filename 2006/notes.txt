[2009-04-07 19:44:30]

* Spam mail received from one "Donald Nut" contained the following publication:
    [PUB] INTRO.MUA=5@999999|b9666432feff66e528a17fb69ae8e9a

* Code snippet of a hack that failed to compile:
    $ cd code
    $ /bin/umodem hack.bas STOP
    $ /bin/qbasic hack.bas
    $ ls /home
    $ ./hack.exe howie

* hack.bas syntax error when compiling:
    qbasic: SYNTAX ERROR: EXPECTED  LINENVM STATEMENT

* use `rlwrap ./um umix.umz` to get command history

* Randomly got:
    [PUB] INTRO.UMD=10@999999|7005f80d6cd9b7b837802f1e58b11b8

* After compiling an empty file, got:
    [PUB] INTRO.QBC=10@999999|e6ee9c98b80b4dd04814a29a37bcba8

* After logging in, got:
    [PUB] INTRO.LOG=200@999999|35e6f52e9bc951917c73af391e35e1d

* Adventure game: 
    >: incinerate manifesto
    [PUB] ADVTR.INC=5@999999|f95731ab88952dfa4cb326fb99c085f
    >: combine cache with processor
    [PUB] ADVTR.CMB=5@999999|764e8a851411c66106e130374d8abbb

* /home/guest/a.out core dump:
    [PUB] INTRO.OUT=5@999999|69ca684f8c787cfe06694cb26f74a95

* Passwords cracked:
    [PASS] ftd:falderal90
    [PASS] ohmega:bidirectional
    [PASS] howie:xyzzy
    [PASS] hmonk:COMEFROM


[2009-04-08 00:44:57]

* /home/ftd/ml19100.exe gives:
    [PUB] BASIC.MLC=100@999999|8f8f7b233a9deb154cbcd5314b8e930

* [!!!] Publication checker found! /home/ftd/icfp.exe

[2009-04-08 10:04:45]

* Adventure game:
    | processor needs cache
    | radio needs transistor and antenna
    | A-1920-IXB needs transistor and processor and bolt and (radio missing antenna)
    | motherboard needs screw and A-1920-IXB
    | keypad needs motherboard and button

    on unlocking door:
    [PUB] ADVTR.KEY=20@999999|36995486a5be3bd747d778916846d2d

[2009-04-08 17:18:53]

* [SOL] Adventure game: to get out of the door at the beginning -
    | n
    | take bolt
    | take spring
    | take button
    | take processor
    | take pill
    | take radio
    | take cache
    | incinerate pill
    | take cache
    | combine cache with processor
    | take blue transistor
    | combine transistor with radio
    | take antenna
    | incinerate antenna
    | take screw
    | take motherboard
    | incinerate spring
    | take motherboard
    | combine motherboard with screw
    | take A-1920-IXB
    | combine A-1920-IXB with bolt
    | combine A-1920-IXB with radio
    | combine A-1920-IXB with processor
    | take red transistor
    | combine A-1920-IXB with transistor
    | take keypad
    | combine keypad and button
    | combine motherboard and A-1920-IXB
    | combine keypad with motherboard
    | s
    | use keypad

* Adventure game:
    | downloader needs USB cable, display, jumper shunt, progress bar, power cord
    | uploader needs MOSFET, status LED, RS232 adapter, EPROM burner, battery
    | USB cable needs (a T-9887-OFC missing a X-6458-TIJ), F-6678-DOX, N-4832-NUN

    on creating USB cable:
    ADVTR.USB=20@999999|5d764ff644ba600741a6ea9273b86f3

* Passwords cracked:
    [PASS] yang:U+262F


[2009-04-09 19:18:33]

* Certification puzzle:
    | Puzzle: stop
    | Initial memory: M[0-5] = [0, 1, 0, 0, 0, 0]
    |  Remainder of memory initialized from /etc/passwd
    | Initial registers: {0, 1, 2, 3} {4, 5}
    | Final memory: Any
    | Final registers: Any
    | Certification point value: 5 - 10
    - need to make M[sR[0]] != 0

    01111111 = 7F : add 11111 to sR[0] and rotate all by 1
    00000000 = 00 : halt, since sR[0] = 1 and M[1] = 1
    [SOL] stop:7F00
    [PUB] BLNCE.STP=10@999999|e1c3e7108c2a7697cc11151dc5649eb


    | Puzzle: stop1
    | Initial memory: M[0-5] = [0, 1, 0, 0, 0, 0].
    |  Remainder of memory initialized from /etc/passwd
    | Initial registers: {0, 0, 0, 0} {0, 0}
    | Final memory: Any
    | Final registers: Any
    | Certification point value: 5 - 10

    - need to make M[sR[0]] != 0
    01100001 = 61 : add 00001 to sR[0] and swap with dR[1]
    01100001 = 61 : add 00001 to sR[0] and swap with dR[1]
    00000000 = 00 : halt, since sR[0] = 1 and M[1] = 1
    [SOL] stop1:616100
    [PUB] BLNCE.ST1=5@999999|bb606534654eb4acf7663f72acac3ad


* /etc/passwd in memory for puzzle stop:
    [PASS] gardener:mathemantica


[2009-04-14 03:00:53]

* Certification puzzle:
    | Puzzle: stop1
    - improved solution relies on looping nature of IP:
    [SOL] stop1:6100
    [PUB] BLNCE.ST1=10@999999|3417ffced484d8ab26e1062e7cd8feb


[2009-04-15 02:24:49]

* Certification puzzle:
    | Puzzle: stop117
    - add 1 until sR[0] == 127; then use science to halt
    [SOL] stop127:6100
    [PUB] BLNCE.S27=20@999999|a7f8d6a06903f3a8956d0f958a50a33

* Missing adventure publication, found in transcript:
    [PUB] ADVTR.USB=20@999999|5d764ff644ba600741a6ea9273b86f3

* On finishing mult.2d:
    [PUB] CIRCS.MUL=30@999999|fe8a47581d2a95699b216c13fb250bd
    [PASS] bbarker:plinko

* On finishing plinko model 000:
    [PUB] BLACK.000=10@999999|4566683b0cde7717794ff5fc1c298c8

